#!/usr/bin/env sh
# SPDX-FileCopyrightText: 2025 JWP Consulting GK
#
# SPDX-License-Identifier: AGPL-3.0-or-later
# Prepare a new version to be release
set -e
version="$(date "+%Y.%-m.%-d")"
echo "Version: $version"

BACKEND_PYPROJECT_TOML="backend/pyproject.toml"
FRONTEND_DIR="frontend"
FRONTEND_PACKAGE_JSON="$FRONTEND_DIR/package.json"
FRONTEND_LOCK_FILE="$FRONTEND_DIR/package-lock.json"

next_cmd=$(printf 'sed -E -i -e "s/^version = ".+"$/version = \\"%s\\"/" "%s"' \
    "$version" \
    "$BACKEND_PYPROJECT_TOML"
)
printf "About to run %s\nContinue? (c-c to exit)" "$next_cmd"
read -r _
eval "$next_cmd"

tmp_package="$(mktemp)"
next_cmd=$(printf 'jq --indent 4 ".version = \\"%s\\"" "%s" > "%s" && mv "%s" "%s"' \
    "$version" \
    "$FRONTEND_PACKAGE_JSON" \
    "$tmp_package" \
    "$tmp_package" \
    "$FRONTEND_PACKAGE_JSON"
)
printf "About to update run %s\nContinue? (c-c to exit)" "$next_cmd"
read -r _
eval "$next_cmd"

echo "Updating lock file for $FRONTEND_PACKAGE_JSON"
prevd="$PWD"
cd "$FRONTEND_DIR"
npm install
cd "$prevd"

next_cmd=$(printf "git add %s %s %s" "$BACKEND_PYPROJECT_TOML" "$FRONTEND_PACKAGE_JSON" "$FRONTEND_LOCK_FILE")
printf "about to run %s\nContinue? (c-c to exit)" "$next_cmd"
read -r _
eval "$next_cmd"

next_cmd=$(printf 'git commit -m \"Set Projectify version to %s\"' "$version")
printf "about to run %s\nContinue? (c-c to exit)" "$next_cmd"
read -r _
eval "$next_cmd"

next_cmd=$(printf 'git tag %s' "$version")
printf "about to run %s\nContinue? (c-c to exit)" "$next_cmd"
read -r _
eval "$next_cmd"
